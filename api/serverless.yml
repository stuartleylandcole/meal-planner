service: meal-planner-api

provider:
  name: aws
  runtime: java8
  region: eu-west-2
  stage: dev

  environment:
    tableName:
      Ref: MealsTable
    region: ${self:provider.region}

  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      # Restrict our IAM role permissions to
      # the specific table for the stage
      Resource:
        - "Fn::GetAtt": [ MealsTable, Arn ]

package:
  artifact: target/meal-planner-api-dev.jar

functions:
  hello:
    handler: com.serverless.Handler
    events:
      - http:
          path: say/hello
          method: get
  createMeal:
    handler: com.mealplanner.function.CreateMealHandler
    events:
      - http:
          path: /meals
          method: post
          cors: true
          authorizer: aws_iam
  getMeal:
    handler: com.mealplanner.function.GetMealHandler
    events:
      - http:
          path: /meals/{id}
          method: get
          cors: true
          authorizer: aws_iam
  list:
      handler: com.mealplanner.function.ListMealsHandler
      events:
        - http:
            path: /meals
            method: get
            cors: true
            authorizer: aws_iam
  updateMeal:
    handler: com.mealplanner.function.PutMealHandler
    events:
      - http:
          path: /meals/{id}
          method: put
          cors: true
          authorizer: aws_iam

custom:
  # Our stage is based on what is passed in when running serverless
  # commands. Or fallsback to what we have set in the provider section.
  stage: ${opt:stage, self:provider.stage}
  # Set our DynamoDB throughput for prod and all other non-prod stages.
  tableThroughputs:
    prod: 5
    default: 1
  tableThroughput: ${self:custom.tableThroughputs.${self:custom.stage}, self:custom.tableThroughputs.default}
  # Load our webpack config
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true

resources:
  # DynamoDB
  - ${file(resources/dynamodb-meals-table.yml)}
  # Cognito
  - ${file(resources/cognito-user-pool.yml)}
  - ${file(resources/cognito-identity-pool.yml)}
